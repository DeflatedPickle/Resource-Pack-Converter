# This is a basic workflow to help you get started with Actions

name: Build app

# Controls when the action will run. 
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    continue-on-error: true
    
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # The type of runner that the job will run on
        os: [windows-latest, ubuntu-latest, macos-latest]
    
    name: Create ${{ matrix.os }} executable

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - shell: bash
        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Setup just
        # You may pin to the exact commit or the version.
        # uses: extractions/setup-just@fc2abd7b0cafd21b2e0cf4b89e3d6816fea2db97
        uses: extractions/setup-just@v1
        with:
          # A valid semver specifier of the just version to install
          just-version: 0.8
          
      - name: Build application
        run: "just build phantom"
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/phantom
          asset_name: phantom
          asset_content_type: application/x-sharedlib
